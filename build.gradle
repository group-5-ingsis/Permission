plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
    id 'org.jetbrains.kotlinx.kover' version '0.7.3'
    id 'org.springframework.boot' version '3.3.4'
    id 'org.jlleitschuh.gradle.ktlint' version '11.5.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id "de.undercouch.download" version "5.3.0"
}

group = 'com.ingsis.Permission'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'net.logstash.logback:logstash-logback-encoder:7.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
    implementation 'org.json:json:20210307'

    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'org.postgresql:postgresql'
    testImplementation 'org.amshove.kluent:kluent:1.73'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'com.h2database:h2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

task downloadNewrelic(type: Download) {
    mkdir 'newrelic'
    src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
    dest file('newrelic')
}

task unzipNewrelic(type: Copy) {
    from zipTree(file('newrelic/newrelic-java.zip'))
    into rootDir
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

kover {
    useJacoco()
}

koverReport {
    verify {
        rule {
            bound {
                minValue = 80
            }
        }
        filters {
            excludes {
                packages("config")
            }
        }
    }

    defaults {
        html {
            onCheck = true
        }
    }
}


ktlint {
    disabledRules = ['no-wildcard-imports', 'max-line-length']
}

test {
    jvmArgs("-XX:+EnableDynamicAgentLoading", "-Djdk.instrument.traceUsage", "-Xshare:off")
}
